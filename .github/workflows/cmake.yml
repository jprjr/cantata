name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: install dependencies
      run: sudo apt-get install -y libavahi-client-dev libavahi-core-dev libavcodec-dev libavformat-dev libavutil-dev libcddb2-dev libcdio-paranoia-dev libebur128-dev libmpg123-dev libmtp-dev libmusicbrainz5-dev libphonon4qt5-dev libqt5svg5-dev libspeex-dev libspeexdsp-dev libtag-extras-dev libtag1-dev libudev-dev libvlc-dev libvlccore-dev libx11-dev media-player-info pkg-config pkg-kde-tools qtbase5-dev qtmultimedia5-dev qttools5-dev-tools

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build-linux -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build-linux --config ${{env.BUILD_TYPE}}

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: install dependencies
      run: vcpkg install qt5-base:x64-windows qt5-winextras:x64-windows taglib:x64-windows

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build-windows -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build-windows --config ${{env.BUILD_TYPE}}


